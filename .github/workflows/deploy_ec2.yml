name: Deploy EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Launch EC2 instance
        run: |
          # Ejecuta el comando para lanzar la instancia EC2
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ami-0453ec754f44f9a4a \
            --count 1 \
            --instance-type t2.micro \
            --key-name my-key-pair \
            --security-group-ids sg-12345678 \
            --subnet-id subnet-12345678 \
            --query 'Instances[0].InstanceId' \
            --output text)

          echo "Instance ID: $INSTANCE_ID"

      - name: Create Security Group
        run: |
          SG_ID=$(aws ec2 create-security-group \
            --group-name my-security-group \
            --description "Security group for EC2" \
            --vpc-id vpc-12345678 \
            --query 'GroupId' \
            --output text)

          aws ec2 authorize-security-group-ingress \
            --group-id $SG_ID \
            --protocol tcp \
            --port 22 \
            --cidr 0.0.0.0/0

          echo "Security Group ID: $SG_ID"

      - name: Generate SSH key
        run: |
          ssh-keygen -t rsa -b 2048 -f my-key -N ""
          echo "${{ secrets.MY_KEY }}" > my-key.pem

      - name: Configure VPC and Subnet
        run: |
          VPC_ID=$(aws ec2 create-vpc --cidr-block 10.0.0.0/16 --query 'Vpc.VpcId' --output text)
          SUBNET_ID=$(aws ec2 create-subnet --vpc-id $VPC_ID --cidr-block 10.0.1.0/24 --query 'Subnet.SubnetId' --output text)
          
          echo "VPC ID: $VPC_ID"
          echo "Subnet ID: $SUBNET_ID"

      - name: Create AMI
        run: |
          AMI_ID=$(aws ec2 create-image \
            --instance-id $INSTANCE_ID \
            --name "CustomAMI" \
            --description "Custom AMI based on EC2 instance" \
            --query 'ImageId' \
            --output text)

          echo "AMI ID: $AMI_ID"

